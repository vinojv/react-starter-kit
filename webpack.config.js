// Webpack dev server

var fs = require('fs');
var path = require('path');
require('babel-polyfill');
var webpack = require('webpack');
var babelPolyfill = require('babel-polyfill');
var HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  devtool: 'source-map',

    entry: [
        'babel-polyfill',
        'whatwg-fetch',
        'webpack-dev-server/client?http://localhost:8080',
        './src/index.js'
    ],

    output: {
        path: __dirname + '/__build__',
        filename: '[name].js',
        chunkFilename: '[name].chunk.js',
        publicPath: '/'
    },

    module: {
        loaders: [
            {
                test: /\.(ttf|eot|otf|svg|png|gif|woff|jpeg(2)?)(\?[a-z0-9]+)?$/,
                loader: 'file-loader'
            },
            {
                test: /\.css$/,
                exclude: [/global.css/, /flaticon.css/, /CustomersMapping.css/, /TransactionCharts.css/],
                loaders: [
                    'style?sourceMap',
                    'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]'
                ]
            },
            {
                test:  [/global.css/,/flaticon.css/,/CustomersMapping.css/,/TransactionCharts.css/],
                loader: 'style!css-loader'
            },
            {
                test: /\.js/,
                exclude: /node_modules/,
                loader: 'babel-loader',
                query: {
                    presets: ['es2015', 'react', 'stage-0'],
                    plugins: ["transform-decorators-legacy"]
                }
            }
        ],
        include: path.join(__dirname, 'src')
    },

    plugins: [
        new webpack.optimize.CommonsChunkPlugin('common.js'),
        new webpack.DefinePlugin({
            'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development')
        }),
        new webpack.HotModuleReplacementPlugin(),
        new HtmlWebpackPlugin({
            template: 'index.html',
            inject: true // Inject all files that are generated by webpack, e.g. bundle.js
        })
    ],
    externals: {
        'cheerio': 'window',
        'react/addons': true,
        'react/lib/ExecutionEnvironment': true,
        'react/lib/ReactContext': true
    }
};